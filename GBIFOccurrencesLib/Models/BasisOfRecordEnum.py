"""
GBIFOccurrencesLib

This file was automatically generated by APIMATIC BETA v2.0 on 10/29/2015
"""

class BasisOfRecordEnum(object):

    """Implementation of the 'BasisOfRecord' enum.

    A simple enumeration of all DarwinCore values of BasisOfRecord legal for
    occurrences.

    Attributes:
        FOSSIL_SPECIMEN: An occurrence record describing a fossilized
            specimen.
        HUMAN_OBSERVATION: An occurrence record describing an observation made
            by one or more people.
        LITERATURE: An occurrence record based on literature alone.
        LIVING_SPECIMEN: An occurrence record describing a living specimen,
            e.g.
        MACHINE_OBSERVATION: An occurrence record describing an observation
            made by a machine.
        MATERIAL_SAMPLE: An occurrence record based on samples taken from
            other specimens or the environment.
        OBSERVATION: An occurrence record describing an observation.
        PRESERVED_SPECIMEN: An occurrence record describing a preserved
            specimen.
        UNKNOWN: Unknown basis for the record.

    """

    FOSSIL_SPECIMEN = "FOSSIL_SPECIMEN"

    HUMAN_OBSERVATION = "HUMAN_OBSERVATION"

    LITERATURE = "LITERATURE"

    LIVING_SPECIMEN = "LIVING_SPECIMEN"

    MACHINE_OBSERVATION = "MACHINE_OBSERVATION"

    MATERIAL_SAMPLE = "MATERIAL_SAMPLE"

    OBSERVATION = "OBSERVATION"

    PRESERVED_SPECIMEN = "PRESERVED_SPECIMEN"

    UNKNOWN = "UNKNOWN"


    @classmethod
    def to_string(cls, val):
        """Returns the string equivalent for the Enum.

        """
        for k,v in vars(cls).iteritems():
            if v==val:
                return k

    @classmethod
    def from_string(cls, str):
        """Creates an instance of the Enum from a given string.

        """
        return getattr(cls, str.upper(), None)